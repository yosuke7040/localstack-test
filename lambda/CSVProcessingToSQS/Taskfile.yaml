version: '3'

# vars:
#   BUILD_DIR: ./build
#   ZIP_FILE: CSVProcessingToSQS.zip
#   FUNCTION_NAME: CSVProcessingToSQS
#   S3_BUCKET: lambda-code-bucket

# tasks:
#   setup:
#     desc: Install python dependencies
#     cmds:
#       - pip3 install -r requirements.txt -t {{.BUILD_DIR}}/

#   build:
#     desc: Copy python files to the build directory
#     cmds:
#       - mkdir -p {{.BUILD_DIR}}
#       - cp -r *.py {{.BUILD_DIR}}

#   package:
#     desc: Package the application into a ZIP file
#     cmds:
#       - task: setup
#       - task: build
#       - cd {{.BUILD_DIR}} && zip -r ../{{.ZIP_FILE}} .

#   deploy:
#     desc: Deploy the package to AWS Lambda
#     cmds:
#       - awslocal s3 cp {{.FUNCTION_NAME}}.zip s3://{{.S3_BUCKET}}/{{.FUNCTION_NAME}}.zip
#       - awslocal lambda update-function-code --function-name {{.FUNCTION_NAME}} --s3-bucket {{.S3_BUCKET}} --s3-key {{.FUNCTION_NAME}}.zip
#     deps: [package]

vars:
  FUNCTION_NAME: CSVProcessingToSQS
  S3_BUCKET: lambda-code-bucket

tasks:
  clean:
    desc: Clean up
    cmds:
      - echo "Cleaning up"
      - rm -f {{.FUNCTION_NAME}}.zip bootstrap
    silent: true

  build:
    cmds:
      - echo "Building"
      - GOOS=linux GOARCH=amd64 go build -tags lambda.norpc -o bootstrap main.go
      - zip {{.FUNCTION_NAME}}.zip bootstrap
      - echo "Build and packaging completed"
    silent: true

  upload:
    cmds:
      - echo "Uploading"
      - awslocal s3 cp {{.FUNCTION_NAME}}.zip s3://{{.S3_BUCKET}}/{{.FUNCTION_NAME}}.zip
    silent: true

  update_lambda:
    cmds:
      - awslocal lambda update-function-code --function-name {{.FUNCTION_NAME}} --s3-bucket {{.S3_BUCKET}} --s3-key {{.FUNCTION_NAME}}.zip
    silent: true

  deploy:
    # 並列呼び出しになる
    # deps: [clean, build, upload, update_lambda]
    cmds:
      - task: clean
      - task: build
      - task: upload
      - task: update_lambda

  log-tail:
    cmds:
      - awslocal logs tail /aws/lambda/{{.FUNCTION_NAME}} --follow
    silent: true

  invoke:
    cmds:
      - awslocal lambda invoke --function-name {{.FUNCTION_NAME}} outputfile.txt
    silent: true
